# b main.main
# b cmd/prometheus/main.go:382
#
# web handler
# b prometheus/main.go:156
# b prometheus/main.go:458
# b prometheus/main.go:565
# b web.New
# b (*API).Register
# b web.go:331
# b web.go:339
# b web.go:347
# b web.(*Handler).alerts
# b web.(*Handler).graph
# b web.(*Handler).status
# b web.(*Handler).flags
# b web.(*Handler).serveConfig
# b web.(*Handler).rules
# b web.(*Handler).targets
# b web.(*Handler).serviceDiscovery
# b web.go:360
# b web.(*Handler).version
# b web.go:378
# b web.go:419
# b web.(*Handler).consoles
# b web.(*Handler).quit
# b web.(*Handler).reload
# b web.serveDebug
# b web.go:458
# b web.go:462
# b web.go:384
# b web.go:175
# b web.(*metrics).instrumentHandler
#
# remote storage
# b remote.NewStorage
# b remote.NewWriteStorage
# b remote.(*Storage).ApplyConfig
# b remote.(*WriteStorage).ApplyConfig
# b storage.(*fanout).Appender
# b main.(*readyStorage).Appender
# b scrape.(*scrapeLoop).append
# b remote.NewStorage
# b remote.(*Storage).ApplyConfig
# b remote.NewWriteStorage
# b remote.(*WriteStorage).ApplyConfig
# b remote.(*QueueManager).Append
# b remote.(*Client).Store
#
# wal
# b wal.NewWatcher
# b wal.(*Watcher).Start
# b wal.(*Watcher).loop
# b wal.(*Watcher).Run
# b wal.(*Watcher).watch
# b wal.(*LiveReader).Next
# b wal.(*LiveReader).buildRecord
# b wal.(*LiveReader).readRecord
# b wal.(*LiveReader).fillBuffer
# 
# b storage.(*fanout).Querier
# b tsdb.Open
b tsdb.open
# b tsdb.(*DB).reload
# b tsdb.(*DB).reloadBlocks
# b tsdb.openBlocks
# b tsdb.newStripeSeries
# b tsdb.(*DB).Compact
# b tsdb/db.go:846
# b tsdb.(*DB).compactHead
# b tsdb.(*DB).compactBlocks
# b tsdb.(*DB).CompactHead
# b tsdb.(*noopSeriesLifecycleCallback).PreCreation
# b tsdb.(*noopSeriesLifecycleCallback).PostCreation
# b tsdb.(*noopSeriesLifecycleCallback).PostDeletion
# 
# b tsdb.NewHead
# b tsdb.NewHead
# b tsdb.(*Head).getOrCreateWithID
# b tsdb.(*Head).Truncate
# b tsdb.(*Head).truncateMemory
# b tsdb.(*Head).truncateWAL
# b tsdb.(*Head).gc
#
# b tsdb.(*headAppender).Append
# b tsdb.(*headAppender).Commit
#
# b tsdb.newMemSeries
# b tsdb.(*memSeries).append
# b tsdb.(*memSeries).cutNewHeadChunk
# b head.go:2262
#
# b chunks.(*ChunkDiskMapper).cut
#
# b chunks.(*ChunkDiskMapper).Truncate
# b tsdb.NewBlockQuerier
# b tsdb.newBlockBaseQuerier
# b tsdb.(*blockQuerier).Select
# b tsdb.(*blockBaseQuerier).LabelValues
# b tsdb.(*blockBaseQuerier).LabelNames
# b tsdb.(*blockQuerier).Close
#
# b remote.(*querier).Select
# b remote.(*querier).LabelValues
# b remote.(*querier).LabelNames
# b remote.(*querier).Close
#
# b scrape.(*scrapeLoop).scrapeAndReport
# b scrape.go:1118
# b scrape.go:1086
# b scrape.(*targetScraper).scrape
# b scrape.(*scrapeLoop).append
# b scrape.go:1341
#
# b chunkenc.(*xorAppender).Append
#
# b tsdb.(*headAppender).Append
# b tsdb.(*headAppender).log
#
# b storage.(*fanoutAppender).Commit
# b scrape.go:635
# b wal.NewSize
# b wal.(*WAL).Log
# b wal.(*WAL).log
# b record.(*Encoder).Series
# b record.(*Encoder).Samples
# b record.(*Encoder).Tombstones
#
# b index.NewMemPostings
# b index.NewUnorderedMemPostings
# b index.(*MemPostings).Add
#
# b index.(*Writer).startSymbols
# b index.(*Writer).AddSymbol
# b index.(*Writer).finishSymbols
# b index.(*Writer).AddSeries
# b tsdb/index/index.go:438
# b tsdb/index/index.go:486
# b index.(*Writer).writePostingsToTmpFiles
# b index.(*Writer).writeLabelIndices
# b index.(*Writer).writePostings
# b index.(*Writer).writeLabelIndexesOffsetTable
# b index.(*Writer).writePostingsOffsetTable
# b index.(*Writer).writeTOC
#
# b tsdb/compact.go:714
# b tsdb/compact.go:727
# b tsdb/compact.go:735
# b tsdb/compact.go:745
# b tsdb/compact.go:752
g
